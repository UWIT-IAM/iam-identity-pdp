#
# pdp install playbook
#

- hosts: "{{ target }}"
  serial: 1
  max_fail_percentage: 10
  gather_facts: false
  vars:
    app_name: pdp
    app_base: /data/local/django
    app_url_base: id
    syslog_facility: LOG_LOCAL7
    prod_tester_group: u_groups_pdp-prod-testers

  tasks:

  - name: remove from cluster
    copy: "src=apache/host_status.txt.disable dest=/www/host_status.txt group=iam-dev mode=664 "
    when: "cluster_hosts|length>1 "

  - pause: "seconds={{ idle_wait_sec |default(10) }}"
    when: "cluster_hosts|length>1 "

  - name: update install status
    copy: "src=install.status dest={{app_base}}/pdp group=iam-dev mode=664"

  - name: stat the secret file
    stat: path=/data/local/etc/pdp-secret
    register: secrets_stat

  - name: fail if no secret
    fail: msg="No secret file"
    when: not secrets_stat.stat.isreg or secrets_stat.stat.size < 8

  - name: copy app
    copy: "src=../{{item}} dest={{app_base}}/pdp group=iam-dev mode=664 directory_mode=2775"
    with_items:
      - manage.py
      - pdp
      - pdp-site
      - requirements.txt
      - setup.py
    notify:
       - touch wsgi

  - local_action: stat path=../local_settings.py.{{ cluster_type }}
    register: local_stat

  - name: copy local settings
    copy: "src=../local_settings.py.{{ cluster_type }} dest={{app_base}}/pdp/pdp-site/local_settings.py group=iam-dev mode=664 "
    when: local_stat.stat.exists
    notify:
       - touch wsgi

  - debug: "Note.. local_settings.py for cluster {{cluster_type}} not copied"
    when: not local_stat.stat.exists
    
  - name: verify libraries
    pip: requirements={{ app_base }}/pdp/requirements.txt virtualenv={{ app_base }}/pdp
    notify:
       - touch wsgi

  # update http and https config
  - name: copy apache config files
    template: "src=apache/pdp-access.xml dest=/data/conf/apache.conf.d/pdp-access.xml group=iam-dev mode=664"
    notify:
       - restart apache

  - include: "ansible-tools/tasks/apache_config.yml file=https prod=pdp"
  - include: "ansible-tools/tasks/apache_config.yml file=http prod=pdp"
  - include: "ansible-tools/tasks/apache_config.yml file=global prod=pdp"


  - local_action: "stat path=certs.{{cluster_type}}.yml"
    register: certs_stat

  - include_vars: certs.{{cluster_type}}.yml
    when: certs_stat.stat.exists

  - name: create certs dir 
    file: "path={{ app_base }}/pdp/certs state=directory group=iam-dev mode=2775"


  - name: copy certs if present should never happen for something AE now manages
    copy: "src={{ item.src }} dest={{ item.dest }} group=iam-dev mode=664 "
    with_items:
       - { src: '{{local_pdp_certFile}}', dest: '{{pdp_certFile}}' }
       - { src: '{{local_pdp_keyFile}}', dest: '{{pdp_keyFile}}' }
    when: False and have_local_certs is defined and item.src != ""

  - name: verify db 
    file: "path={{ app_base }}/pdp/db state=directory group=iam-dev mode=2775"

  # setup db
  - name: check db 1
    stat: path={{app_base}}/pdp/db/db.sqlite3
    register: db_stat

  - name: check db 2
    django_manage: command=migrate app_path={{app_base}}/pdp python_path={{app_base}}/pdp virtualenv={{app_base}}/pdp
    when: db_stat.stat.exists == False

  - name: check db 3
    file: "path={{ app_base }}/pdp/db/db.sqlite3 state=file group=iam-dev mode=664"
    when: db_stat.stat.exists == False

  # testing non-prod environments, should probably get done another way if the tests
  # start getting longer
  - name: copy extra dev stuff
    copy: "src=../{{item}} dest={{app_base}}/pdp group=iam-dev mode=664 directory_mode=2775"
    with_items:
      - requirements-dev.txt
      - it
    when: cluster_type != "prod"

  - name: pip install dev
    pip: requirements={{ app_base }}/pdp/requirements-dev.txt virtualenv={{ app_base }}/pdp
    when: cluster_type != "prod"

  - name: run integration tests
    command: bin/py.test it
    environment:
      DJANGO_SETTINGS_MODULE: pdp-site.it_settings
      REMOTE_USER: idtest55
    args:
      chdir: "{{ app_base }}/pdp"
    when: cluster_type != "prod"

  # run any handlers 
  - meta: flush_handlers

  - name: return to cluster
    copy: "src=apache/host_status.txt.enable dest=/www/host_status.txt group=iam-dev mode=664 "
    when: "cluster_hosts|length>1 "

  handlers:
     - include: "ansible-tools/tasks/iam_handlers.yml"

     - name: "touch wsgi"
       file: "path={{ app_base }}/pdp/pdp-site/wsgi.py state=touch"


